upstream client {
    server client:3000;
     #proxy_set_header Host $host;
     # proxy_set_header X-Real-IP $remote_addr;
 	 #proxy_pass http://192.168.1.11:8080;  
}

       upstream api {
    server api:5000;
}

server {
    listen 80;

    location / {
        proxy_pass http://client;
        gzip off;
        ssl                  on;
        ssl_certificate      /etc/ssl/fullchain.pem;
        ssl_certificate_key  /etc/ssl/private/privkey.pem;
	    ssl_trusted_certificate /etc/ssl/ca-intermediate.pem;
	    #ssl_dhparam /etc/ssl/dhparams.pem;
	    #Enable TLS1.2 according to your nginx version
	    #ssl_protocols TLSv1.2 TLS1.3;
	    ssl_protocols TLSv1.2;
        ssl_session_timeout  5m;
        ssl_session_cache    shared:SSL:1m;
	    #Modern cyphersuites
	    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:AES256+EECDH:AES256+EDH:!aNULL;
	    #ecdh curves enabled
	   ssl_ecdh_curve X25519:P-521:P-384:P-256;
	   #OSCP stapling
	   ssl_stapling on;
	   ssl_stapling_verify on;
	   #Prefer server ciphers
       ssl_prefer_server_ciphers   on;
	   #Do not activate nginx resolver (cache poisoning attack) see http://blog.zorinaq.com/nginx-resolver-vulns/

    # Add these headers against Cross-site scripting (XSS)
      add_header X-XSS-Protection "1; mode=block";
      add_header Referrer-Policy "no-referrer";
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options SAMEORIGIN;
      #Example of Public-Key-Pins, pin-sha256 me be generated for your website, see https://scotthelme.co.uk/hpkp-http-public-key-pinning/
      #add_header Public-Key-Pins 'pin-sha256="slfGw+w+LVqRL/5tDhu1/mCoUKiOEvuUsJhDovbR+1U="; pin-sha256="TqtvbL6EXyRVLliNtoNf0siv6Bz3RvcmMTCAVM5HahE="; max-age=5184000; includeSubDomains';
     #Example Content Security Policy, modify according to your needs
     #add_header Content-Security-Policy-Report-Only "default-src 'self' https://www.youtube.com https://fonts.googleapis.com; script-src 'self' 'unsafe-inline' https://googleads.g.doubleclick.net https://www.youtube.com https://s.ytimg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self'; font-src 'self' https://fonts.gstatic.com https://fonts.googleapis.com; media-src 'self' https://www.youtube.com; report-uri https://www.example.fr/report.php";
   # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack
     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
     }

    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        rewrite /api/(.*) /$1 break;
        proxy_pass http://api;
    }
}
